@model Marketplace.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    var countAds = @Model.Advertisements.Count();
}

<div class="container m-0 p-0">
    <div class="row p-0 m-0 mb-3 justify-content-center">
        <div class="col-5 m-0 p-0">
            <input asp-for="SearchTerm" id="searchBar" class="form-control border-1 border-primary" placeholder="Search"/>
        </div>
        <div class="col-2 m-0 p-0 mx-1">
            <select id="categoryDropDown" asp-items="@Model.CategoryDropDown" asp-for="CategoryId" class="form-control text-center border-1 border-primary">
                <option value=-1>All</option>
            </select>
        </div>
        <div class="col-2 m-0 p-0 mx-1">
            <select id="filterDropDown" asp-for="Filter" class="form-control text-center border-1 border-primary">
                <option>New</option>
                <option>Old</option>
                <option>Cheapest</option>
                <option>Most Expensive</option>
            </select>
        </div>
        <div class="col-2 m-0 p-0 mx-1">
            <input id="locationInput" asp-for="Location" class="form-control text-center border-1 border-primary" placeholder="Location"/>
        </div>
        <div class="col-2 m-0 p-0 mx-1">
            <input id="minimumPriceInput" asp-for="MinimumPrice" class="form-control text-center border-1 border-primary" placeholder="Minimum Price"/>
        </div>
        <div class="col-2 m-0 p-0 mx-1">
            <input id="maximumPriceInput" asp-for="MaximumPrice" class="form-control text-center border-1 border-primary" placeholder="Max Price"/>
        </div>
        <div class="col-1 m-0 p-0 text-center">
            <a id="searchButton" href="#" onclick="return searchFor();" class="btn btn-primary">Search</a>
        </div>
    </div>
</div>

@if (countAds==0)
{
    <h3>No advertisements matching your search result.</h3>
}
else
{
    <h3>Advertisements</h3>

    <div class="container">
        @for (var i = 0; i < countAds; i+=4) // responsible for the row count, on each row I want exactly 4 elements, after those 4 elements make a new row
        {
            <div class="row">
            @for (var j = 0; j < 4; j++) // I want 4 columns on current row
            {
                @if (i+j==countAds) // stop displaying if we've reached the end
                {
                    break;
                }

                var currentAd = Model.Advertisements.ElementAt(i+j);
                <div class="card col-3 border border-primary rounded p-0 mb-3">
                <partial name="_PrivateAdvertisementColumnPartial" model=currentAd />
                </div>
            }
            </div>
        }
    </div>
    <div class="text-center">
        <a href="/?pageNumber=" onclick="return backArrow(this, true);" class="h3 text-decoration-none">&#60;</a>
        @{
            int maximumDisplayedPages = 10;
            int startingIndex = startingIndex = Model.PageNumber - (Model.PageNumber % maximumDisplayedPages);
            int endingIndex = (Model.PageNumber + maximumDisplayedPages) - (Model.PageNumber % maximumDisplayedPages);

            if (endingIndex > Model.MaxCountPages)
            {
                endingIndex = Model.MaxCountPages;                
            }

            @for (var i = startingIndex; i < endingIndex; i++)
            {
                @if (i==@Model.PageNumber)
                {
                    <a id="currentPage" href="/?pageNumber=@i" onclick="return changePage(this);" class="h3 text-decoration-none">@i</a>
                    continue;
                }
                <a href="/?pageNumber=@i" onclick="return changePage(this);" class="h5 text-decoration-none">@i</a>
            }

            if (!(endingIndex >= Model.MaxCountPages))
            {
                var lastPageIndex = Model.MaxCountPages - 1;
                <span class="h5">....</span>
                <a href="/?pageNumber=@lastPageIndex" onclick="return changePage(this);" class="h5 text-decoration-none">@lastPageIndex</a> 
            }
        }
        <a href="/?pageNumber=" onclick="return backArrow(this, false);" class="h3 text-decoration-none">&#62;</a>
    </div>
}

@section Scripts
{
    <script defer>
        // These functions are dependant on some dom elements' href attributes. If you are looking to refactor be careful not to break existing logic
        function backArrow(arrowElement, isBackArrow)
        {
            let pageId = @Model.PageNumber;

            if(isBackArrow)
            {
                pageId--;
            }
            else
            {
                pageId++;
            }

            if(pageId<0 || pageId >= @Model.MaxCountPages)
            {
                return false;
            }

            arrowElement.href+=pageId+"&"+getSearchQuery();
            return true;
        }

        function searchFor () {
            searchButton.href="/?"+getSearchQuery();

            return true;
        }

        function changePage(pageLinkElement)
        {
            pageLinkElement.href+="&"+getSearchQuery();
            return true;
        }

        function getSearchQuery()
        {
            let searchButton = document.querySelector("#searchButton");
            let categoryDropDown = document.querySelector("#categoryDropDown");
            let filterDropDown = document.querySelector("#filterDropDown");

            let category = categoryDropDown.options[categoryDropDown.selectedIndex].text;
            let searchTerm = document.querySelector("#searchBar").value;
            searchTerm=searchTerm.trim();
            let filter = filterDropDown.options[filterDropDown.selectedIndex].text;
            let location = document.querySelector("#locationInput").value;
            let minimumPrice = document.querySelector("#minimumPriceInput").value;
            let maximumPrice = document.querySelector("#maximumPriceInput").value;

            searchQuery="filter="+filter;
            searchQuery+="&category="+category;

            if(!(isNullOrWhitespace(searchTerm)))
            {
                searchQuery+="&searchTerm="+searchTerm;
            }

            if(!(isNullOrWhitespace(location)))
            {
                searchQuery+="&location="+location;
            }

            if(!(isNullOrWhitespace(minimumPrice)))
            {
                searchQuery+="&minimumPrice="+minimumPrice;
            }

            if(!(isNullOrWhitespace(maximumPrice)))
            {
                searchQuery+="&maximumPrice="+maximumPrice;
            }
            return searchQuery;
        }

        function isNullOrWhitespace(input) {
            if (typeof input === 'undefined' || input == null) return true;

            return input.replace(/\s/g, '').length < 1;
        }
    </script>
    <script defer>
        window.onload=function(){
            $("#searchBar").on('keyup', function (e) {
            if (e.key === 'Enter' || e.keyCode === 13) {
                document.querySelector("#searchButton").click();
            }
        });
        }
    </script>
}