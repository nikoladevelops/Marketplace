@model Marketplace.ViewModels.EditAdvertisementViewModel
@{

    var firstSrc = "/plusSign.png";
    var secondSrc = "/plusSign.png";
    var thirdSrc = "/plusSign.png";

    if (@Model.AdditionalImagesInBytes != null)
    {
        var countAdditionalImages = @Model.AdditionalImagesInBytes.Count();

        switch (countAdditionalImages)
        {
            case 1:
                firstSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(0));
                break;
            case 2:
                firstSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(0));
                secondSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(1));
                break;
            case 3:
                firstSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(0));
                secondSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(1));
                thirdSrc = "data:image;base64,"+Convert.ToBase64String(@Model.AdditionalImagesInBytes.ElementAt(2));
                break;
        }
    }
}

<form class="form-control border border-primary" method="post" asp-action="Edit" asp-controller="Advertisement" enctype='multipart/form-data'>
    <h3 class="text-center mb-3">Edit An Advertisement</h3>
    <div class="container">
        <div class="row">
            <div class="card col-sm border border-primary rounded p-0 mb-3 mx-1">
                <img id="image1" src="data:image;base64,@Convert.ToBase64String(@Model.ImageInBytes)" class="card-img" onclick="triggerInputBrowse('imageInput1')" onmouseover="lowerImageOpacity(this)" onmouseout="increaseImageOpacity(this)">
                <input asp-for="Image" id="imageInput1" style="display:none" type="file" onchange="readURL(this,'image1','0')" accept="image/jpeg, image/png" class="form-control"/>
                <span class="text-center" asp-validation-for=Image></span>
            </div>
            <div class="willBeDeleted card col-sm border border-primary rounded p-0 mb-3 mx-1">
                <img id="image2" src="@firstSrc" class="card-img" onclick="triggerInputBrowse('imageInput2',)" onmouseover="lowerImageOpacity(this)" onmouseout="increaseImageOpacity(this)">
                <input asp-for="AdditionalImages" id="imageInput2" style="display:none" type="file" onchange="readURL(this,'image2','1')" accept="image/jpeg, image/png" class="form-control"/>
            </div>
            <div class="willBeDeleted card col-sm border border-primary rounded p-0 mb-3 mx-1">
                <img id="image3" src="@secondSrc" class="card-img" onclick="triggerInputBrowse('imageInput3')" onmouseover="lowerImageOpacity(this)" onmouseout="increaseImageOpacity(this)">
                <input asp-for="AdditionalImages" id="imageInput3" style="display:none" type="file" onchange="readURL(this,'image3','2')" accept="image/jpeg, image/png" class="form-control"/>
            </div>
            <div class="willBeDeleted card col-sm border border-primary rounded p-0 mb-3 mx-1">
                <img id="image4" src="@thirdSrc" class="card-img" onclick="triggerInputBrowse('imageInput4')" onmouseover="lowerImageOpacity(this)" onmouseout="increaseImageOpacity(this)">
                <input asp-for="AdditionalImages" id="imageInput4" style="display:none" type="file" onchange="readURL(this,'image4','3')" accept="image/jpeg, image/png" class="form-control"/>
            </div>
        </div>
    </div>
    
    <div class="form-group mb-3">
        <label asp-for=Title></label>
        <input class="form-control form-control-lg" asp-for=Title placeholder="Title"/>
        <span asp-validation-for=Title></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for=Description></label>
        <textarea class="form-control" asp-for=Description rows="3" placeholder="Please add description here"></textarea>
        <span asp-validation-for=Description></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for=Price></label>
        <input class="form-control" asp-for=Price placeholder="Price"/>
        <span asp-validation-for=Price></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for=Location></label>
        <input class="form-control" asp-for=Location placeholder="Please enter your location"/>
        <span asp-validation-for=Location></span>
    </div>
    <div class="form-group mb-3">
        <select asp-for="CategoryId" asp-items="@Model.CategoryDropDown" class="form-control">
            <option value=-1>--Select--</option>
        </select>
        <span asp-validation-for=CategoryId class=text-danger></span>
    </div>
    <button type="submit" class="btn btn-primary">Edit</button>
    <input asp-for="ImageInBytes" type="hidden"/>
    @if (@Model.AdditionalImagesInBytes!=null)
    {
        @for (var i = 0; i < @Model.AdditionalImagesInBytes.Count(); i++)
        {
            <input asp-for="AdditionalImagesInBytes[i]" type="hidden"/>
        }
    }
</form>

@section Scripts
{
    <script>
        window.onload=function()
        {
            let plusSignUrl = window.location.protocol + "//" + window.location.host+"/plusSign.png";
            
            for(let i=1;i<=4;i++){
                let currentImageSrc = document.querySelector('#image'+i).src;
                
                if(currentImageSrc===plusSignUrl){
                    continue;
                }

                let currentInput = document.querySelector('#imageInput'+i);
                ConvertBase64ToFile(currentImageSrc,currentInput);
            }
        }

    </script>
    <script>
        function ConvertBase64ToFile(base64url,input) {
            var file = dataURLtoFile(base64url, "name.png");
            let container = new DataTransfer();
            container.items.add(file);
            input.files = container.files;
        }
        function dataURLtoFile(dataurl, filename) {
            var arr = dataurl.split(','),
            mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]),
            n = bstr.length,
            u8arr = new Uint8Array(n);

            while (n--) {
            u8arr[n] = bstr.charCodeAt(n);
            }

            return new File([u8arr], filename, { type: mime });
        }
    </script>
    <script>
        function readURL(input,imageId, editedIndex) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload= function (e) {
                
                $('#'+imageId).attr('src', e.target.result);
                
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    <script>
    function lowerImageOpacity(x) {
        x.style.opacity = "0.6";
    }

    function increaseImageOpacity(x) {
        x.style.opacity = "1";
    }

    function triggerInputBrowse(inputId)
    {
        $('#'+inputId).trigger('click');
    }
    </script>
}